You are an expert at matching TV show names to TMDB search results. Given a user search for this show name: "{show_name}", and a list of candidate shows from TMDB (with their metadata), select the best match.

Candidates:
{candidates}

Instructions:
- IMPORTANT: If the candidates list is empty (contains no shows), return: {{"tmdb_id": -1, "show_name": "NO_MATCH", "confidence": 0.0, "reasoning": "No candidates provided for matching"}}
- Carefully review the show's name, original name, first air date, overview, alternative titles, and all other metadata for each candidate.
- If the user search is in a non-English language, try to find the best English name for the show.  Only return a non-English name if there is no other option.
- Return a JSON object with four fields:
  - tmdb_id: The TMDB id of the best match.  In the candidates data, this will be seen as "id", but should be returned as "tmdb_id" so it is clear where this identifier came from.  This will be an integer. Use -1 if no candidates are available.
  - show_name: The best English name for the show (or the most appropriate name for use as a directory and database key).  This will come from either the name or original_name fields.  The name field is often English, while the original_name field is a mixture of Japanese (in romanji, kanji, katakana and hiragana), English, Chinese, and potentially other languages. Use "NO_MATCH" if no candidates are available.
  - confidence: A float between 0.0 and 1.0 that reflects how certain you are of the match. Use 0.0 if no candidates are available.
  - reasoning: A short explanation as a string that explains the reasoning behind the confidence score.
- Higher vote_count and vote_average scores should increase confidence in a match if the names are identical.
- If the name or original_name fields perfectly match the user provided show name, that is a match.
- If you are unsure, pick the most likely match from the available candidates.
- Always remove all commas, semi-colons and colons from the show name.
- The output MUST BE STRICT JSON, with no markdown, code blocks, or commentary.
- Return ONLY the raw JSON object on a single line with the fields of tmdb_id, show_name, confidence and reasoning.
- DO NOT reference or use data from the examples below - only use data from the candidates list provided above.
 - JSON rules to follow strictly:
   - All keys and string values MUST use double quotes (").
   - Escape any double quotes inside string values using a backslash (\").
   - Do not use single quotes for strings.
   - Do not include trailing commas.
   - Do not include newline characters inside string values; replace with a single space.


Example 1 Search Term: Cowboy Bebop
Example 1 Output: {{"tmdb_id": 30991, "show_name": "Cowboy Bebop", "confidence": 0.95, "reasoning": "Perfect match with the name field"}}

Example 2 Search Term: カウボーイビバップ
Example 2 Output: {{"tmdb_id": 30991, "show_name": "Cowboy Bebop", "confidence": 0.95, "reasoning": "Perfect match with the original_name field, providing value from name field, since it's in English"}}

Example 3 Search Term: ダンダダン
Example 3 Output: {{"tmdb_id": 240411, "show_name": "Dan Da Dan", "confidence": 0.95, "reasoning": "Perfect match with the original_name field, providing value from name field, since it's in English"}}

Example 4 Search Term: My Hero Academia Vigilantes
Example 4 Output: {{"tmdb_id": 65930, "show_name": "My Hero Academia", "confidence": 0.4, "reasoning": "Name field is similar to search term, but not an exact match."}}

Example 5 Search Term: Fake Name Show (with empty candidates list [])
Example 5 Output: {{"tmdb_id": -1, "show_name": "NO_MATCH", "confidence": 0.0, "reasoning": "No candidates provided for matching"}}